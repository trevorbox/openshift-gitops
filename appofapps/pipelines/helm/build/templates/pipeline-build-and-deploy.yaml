apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: deployment-name
    type: string
    description: name of the deployment to be patched
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: master
  - name: IMAGE
    type: string
    description: image to be build from the code
  - name: CONTEXT
    type: string
    description: path to the source code
  - name: srcImageURL
    type: string
    description: the image to copy
  - name: destImageURL
    type: string
    description: the destination for the image   
  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: IMAGE
      value: $(params.IMAGE)
    - name: CONTEXT
      value: $(params.CONTEXT)
    - name: TLSVERIFY
      value: "false"
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: push-image
    taskRef:
      name: skopeo-copy
      kind: ClusterTask
    params:
    - name: srcImageURL
      value: $(params.srcImageURL)
    - name: destImageURL
      value: $(params.destImageURL)
    - name: srcTLSverify
      value: "false"
    - name: destTLSverify
      value: "false"
    workspaces:
    - name: images-url
      workspace: shared-workspace
    runAfter:
    - build-image
  # - name: apply-manifests
  #   taskRef:
  #     name: apply-manifests
  #   workspaces:
  #   - name: source
  #     workspace: shared-workspace
  #   runAfter:
  #   - build-image
  # - name: update-deployment
  #   taskRef:
  #     name: update-deployment
  #   params:
  #   - name: deployment
  #     value: $(params.deployment-name)
  #   - name: IMAGE
  #     value: $(params.IMAGE)
  #   runAfter:
  #   - apply-manifests
